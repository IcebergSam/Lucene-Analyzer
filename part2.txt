The Lucene Demo1. java org.apache.lucene.demo.SearchFiles < testcases.txtEnter query:Searching for: his fiery sword5 total matching documents1. documents/RJ3.txt2. documents/RJ5.txt3. documents/RJ4.txt4. documents/RJ9.txt5. documents/RJ6.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: alas o love5 total matching documents1. documents/RJ6.txt --5love 5O 1alas2. documents/RJ8.txt --1 love 1O3. documents/RJ7.txt -- 3love 2lovers4. documents/RJ1.txt --1love 5. documents/RJ10.txt --1love 1loversPress (q)uit or enter number to jump to a page.Enter query:Searching for: and8 total matching documents1. documents/RJ3.txt2. documents/RJ10.txt3. documents/RJ5.txt4. documents/RJ2.txt5. documents/RJ4.txt6. documents/RJ8.txt7. documents/RJ7.txt8. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: reckon0 total matching documentsEnter query:Searching for: q0 total matching documentsEnter query:Searching for: love4 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ1.txt4. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: fair3 total matching documents1. documents/RJ9.txt2. documents/RJ10.txt3. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:2. No, the Lucene 8.7.0 demo does not use stopwords as evidenced by the third query for the english stopword "and" which results in 8 matching documents.3. No, the Lucene 8.7.0 demo does not use stemming. RJ10.txt demonstrates an example where the words "reckon" is not interpreted as a morphological variation of "reckoning".4. We can deduce that the Lucene 8.7.0 demo uses TFIDF similarity (or some variant) by examining the second query, 'alas o love', for the following reasons: 1) RJ8 has 1 instance of the term 'love' and 1 instance of the term 'O'. 2) RJ7 has 3 instances of the term 'love' and 0 instances of the term 'O'. 2) There are 11 total instances of the term 'love' and 6 total instances of the term 'O' in the corpus. 3) RJ8 is ranked higher than RJ7. Thus it is clear that the demo uses a similarity metric that reflects term importance relative to the corpus, wherein words that are less widespread in the corpus are given more weight. Modifying the DemoStoppingjava MySearchFiles < testcases.txtEnter query:Searching for: fiery sword1 total matching documents1. documents/RJ3.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: alas love4 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ1.txt4. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: and8 total matching documents1. documents/RJ3.txt2. documents/RJ10.txt3. documents/RJ5.txt4. documents/RJ2.txt5. documents/RJ4.txt6. documents/RJ8.txt7. documents/RJ7.txt8. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: reckon0 total matching documentsEnter query:Searching for: q0 total matching documentsEnter query:Searching for: love4 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ1.txt4. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: fair3 total matching documents1. documents/RJ9.txt2. documents/RJ10.txt3. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:Stemmingjava MySearchFiles < testcases.txtEnter query:Searching for: fieri sword1 total matching documents1. documents/RJ3.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: ala love5 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ8.txt4. documents/RJ1.txt5. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: and8 total matching documents1. documents/RJ3.txt2. documents/RJ10.txt3. documents/RJ5.txt4. documents/RJ2.txt5. documents/RJ4.txt6. documents/RJ8.txt7. documents/RJ7.txt8. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: reckon1 total matching documents1. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: love5 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ8.txt4. documents/RJ1.txt5. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: fair3 total matching documents1. documents/RJ9.txt2. documents/RJ10.txt3. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:Similarityjava MySearchFiles < testcases.txtEnter query:Searching for: fieri sword1 total matching documents1. documents/RJ3.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: ala love5 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ8.txt4. documents/RJ1.txt5. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: and8 total matching documents1. documents/RJ3.txt2. documents/RJ5.txt3. documents/RJ10.txt4. documents/RJ2.txt5. documents/RJ4.txt6. documents/RJ8.txt7. documents/RJ7.txt8. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: reckon1 total matching documents1. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: love5 total matching documents1. documents/RJ6.txt2. documents/RJ7.txt3. documents/RJ8.txt4. documents/RJ1.txt5. documents/RJ10.txtPress (q)uit or enter number to jump to a page.Enter query:Searching for: fair3 total matching documents1. documents/RJ9.txt2. documents/RJ10.txt3. documents/RJ1.txtPress (q)uit or enter number to jump to a page.Enter query: